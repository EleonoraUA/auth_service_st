# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    userFilesSaveDir: '%kernel.project_dir%/%env(USER_FILES_SAVE_DIR)%'
    analyticFilesSaveDir: '%kernel.project_dir%/%env(ANALYTIC_EVENT_SAVE_DIR)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $userFilesSaveDir: '%userFilesSaveDir%'
            $analyticFilesSaveDir: '%analyticFilesSaveDir%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    SocialTech\SlowStorage:
        public: true

    App\EventListener\RequestListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request }

    App\EventListener\ResponseListener:
        tags:
            - { name: kernel.event_listener, event: kernel.response }

    App\EventListener\JWTSuccessAuthEventListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess }

    user_manager:
        class: App\Service\UserManager
    App\Service\UserManagerInterface: '@user_manager'

    user_repository:
        class: App\Repository\UserRepository
    App\Repository\UserRepository\UserRepositoryInterface: '@user_repository'

    social_tech_storage:
        class: SocialTech\SlowStorage
    SocialTech\StorageInterface: '@social_tech_storage'

